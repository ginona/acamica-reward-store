{"version":3,"sources":["actions/constants.js","actions/getUser.js","assets/coin.svg","actions/postCoins.js","components/addCoins.js","components/header.js","assets/buy-blue.svg","actions/postRedeem.js","components/cards.js","actions/getProducts.js","customHooks/useCustomPagination.js","components/cardsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["headers","URL_GETUSER","URL_GETPRODUCTS","URL_POSTCOINS","URL_POSTREDEEM","THOUSAND","FIVETHOUSAND","SEVENTHOUSAND","a","fetch","method","response","json","data","console","log","getUser","coins","body","JSON","stringify","postCoins","AddCoins","props","React","useState","setMessage","handleClick","number","then","message","className","onClick","src","coin","alt","setModal","Header","modal","users","setUsers","useEffect","e","name","points","productId","postRedeem","Cards","hovered","isHovered","successRedeem","setSuccessRedeem","style","width","onMouseOver","onMouseLeave","img","url","type","id","_id","category","buy","cost","getProducts","useCustomPagination","itemsPerPage","currentPage","setCurrentPage","maxPage","Math","ceil","length","currentArray","slice","next","prev","jump","page","currentData","begin","end","CardsContainer","products","setProducts","sortData","setSortData","sort","b","parseFloat","map","renderSwitch","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.875b291a.chunk.js","sourcesContent":["export const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmFjMjQ0OWI5NTIzZTAwMjA3ZTFmYzMiLCJpYXQiOjE2MDUxMTcwMDF9.vHMYlEKnpSVDSejVVyittmqUhIQ9pbD2U5CvqwQYJ4I\"\r\n};\r\n\r\nexport const URL_GETUSER = \"https://coding-challenge-api.aerolab.co/user/me\";\r\nexport const URL_GETPRODUCTS = \"https://coding-challenge-api.aerolab.co/products\";\r\nexport const URL_POSTCOINS = \"https://coding-challenge-api.aerolab.co/user/points\";\r\nexport const URL_POSTREDEEM = \"https://coding-challenge-api.aerolab.co/redeem\";\r\n\r\nexport const THOUSAND = 1000;\r\nexport const FIVETHOUSAND = 5000;\r\nexport const SEVENTHOUSAND = 7500;","import { headers, URL_GETUSER } from \"./constants\"\r\n\r\nasync function getUser() {\r\n\r\n    try {\r\n        const response = await fetch(URL_GETUSER, { method: \"GET\", headers })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default getUser","export default __webpack_public_path__ + \"static/media/coin.1fc21bda.svg\";","import { headers, URL_POSTCOINS } from \"./constants\"\r\n\r\nasync function postCoins(coins) {\r\n\r\n    try {\r\n        const response = await fetch(URL_POSTCOINS, { method: \"POST\", headers, body: JSON.stringify({\"amount\": coins}) })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default postCoins","import React from \"react\"\r\nimport coin from \"../assets/coin.svg\"\r\nimport postCoins from \"../actions/postCoins\"\r\nimport { THOUSAND, FIVETHOUSAND, SEVENTHOUSAND} from \"../actions/constants\"\r\n\r\n\r\n\r\nfunction AddCoins(props) {\r\n    const [message, setMessage] = React.useState(\"\")\r\n\r\n    const handleClick = (number) =>{\r\n        postCoins(number).then(response => setMessage(response.message))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"modal-screen\">\r\n            <section className=\"addCoins\">\r\n                <h4 className=\"title-addCoins\"> Add more coins </h4>\r\n                <button className=\"button-addCoins one\" onClick={() => handleClick(THOUSAND)}>\r\n                    <img src={coin} alt={THOUSAND} />\r\n                    {THOUSAND}\r\n                </button>\r\n                <button className=\"button-addCoins two\" onClick={() => handleClick(FIVETHOUSAND)}>\r\n                    <img src={coin} alt={FIVETHOUSAND} />\r\n                    {FIVETHOUSAND}\r\n                </button>\r\n                <button className=\"button-addCoins three\" onClick={() => handleClick(SEVENTHOUSAND)}>\r\n                    <img src={coin} alt={SEVENTHOUSAND} />\r\n                    {SEVENTHOUSAND}\r\n                </button>\r\n                <button className=\"closeAddCoins\" onClick={() => props.setModal(false)}> X </button>\r\n            </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AddCoins","import React from \"react\"\r\nimport getUser from \"../actions/getUser\"\r\nimport AddCoins from \"../components/addCoins\"\r\n// import { userContext } from '../context/userContext';\r\nimport coin from \"../assets/coin.svg\"\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [modal, setModal] = React.useState(false)\r\n    \r\n    const [users, setUsers] = React.useState([])\r\n\r\n    // const { users } = React.useContext(userContext)\r\n\r\n    React.useEffect(() => {\r\n       \r\n        getUser().then(e => setUsers(e));\r\n    },[users]);\r\n\r\n    return (\r\n        <section className=\"header\">\r\n            {/* {userLoaded ?\r\n            <h4> Loading... </h4> : */}\r\n            <div className=\"userNameInfo\">\r\n                <h6 className=\"userName\"> {users.name} </h6>\r\n                <button className=\"button-headerCoins\" onClick = {() => setModal(true)} > \r\n                    {users.points}\r\n                    <img src={coin} alt=\"coin\"/>\r\n                </button>\r\n            </div>\r\n            \r\n            {modal ? \r\n            <AddCoins setModal={setModal}/> : null}\r\n            <div className=\"container-header\">\r\n                <h6 className=\"title-header\"> Electronics </h6>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header","export default __webpack_public_path__ + \"static/media/buy-blue.c5c4f01c.svg\";","import { headers, URL_POSTREDEEM } from \"./constants\"\r\n\r\nasync function postRedeem(productId) {\r\n\r\n    try {\r\n        const response = await fetch(URL_POSTREDEEM, { method: \"POST\", headers, body: JSON.stringify({\"productId\": productId}) })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default postRedeem","import React, {useState} from \"react\"\r\nimport coin from \"../assets/coin.svg\"\r\nimport buy from \"../assets/buy-blue.svg\"\r\nimport postRedeem from \"../actions/postRedeem.js\"\r\n\r\n\r\nfunction Cards(props) {\r\n    \r\n    const [hovered, isHovered] = useState(false)\r\n    const [successRedeem, setSuccessRedeem] = useState(\"\")\r\n\r\n    const handleRedeem = (id) => {\r\n        postRedeem(id).then(response => setSuccessRedeem(response.message));\r\n        console.log(successRedeem);\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"card\" \r\n            style={{ width: \"18rem\" }}\r\n            onMouseOver={() => isHovered(true)}\r\n            onMouseLeave={() => isHovered(false)}>\r\n            <img src={props.img.url} className={hovered ? \"img-hovered card-img-top\" : \"card-img-top\"} alt={props.name}/>\r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={() => handleRedeem(props._id)}>Redeem now</button>\r\n            <div className=\"card-body\">\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">{props.category}</h6>\r\n                <h6 className=\"card-title\">{props.name}</h6>\r\n            </div>\r\n            {hovered ? \r\n            <div className=\"card-hovered\"> \r\n                <div className=\"buttons-card-hovered\"> \r\n                    <img className=\"buy\" src={buy} alt=\"buy\"/>\r\n                    <h5 className=\"card-cost\"> {props.cost} </h5> \r\n                    <img className=\"coin\" src={coin} alt=\"coin\"/>  \r\n                </div>\r\n                \r\n            </div>: null}\r\n            {successRedeem ?\r\n            <div> {successRedeem} </div> \r\n            : null}\r\n\r\n        </div> \r\n    )\r\n   \r\n}\r\n\r\nexport default Cards","import { headers, URL_GETPRODUCTS } from \"./constants\"\r\n\r\nasync function getProducts() {\r\n\r\n    try {\r\n        const response = await fetch(URL_GETPRODUCTS, { method: \"GET\", headers })\r\n        const data = await response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(\"Error\", error)\r\n    }\r\n}\r\n\r\nexport default getProducts","import React from 'react'\r\n\r\nconst useCustomPagination = (data, itemsPerPage) => {\r\n    const [currentPage, setCurrentPage] = React.useState(1);\r\n    const maxPage = Math.ceil(data.length / itemsPerPage);\r\n\r\n    const currentData = () => {\r\n        const begin = (currentPage -1) * itemsPerPage;\r\n        const end = begin + itemsPerPage;\r\n        return data.slice(begin, end)\r\n    }\r\n\r\n    const currentArray = data.slice((currentPage-1) * itemsPerPage, currentPage * itemsPerPage)\r\n\r\n    const next = () => {\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const prev = () => {\r\n        setCurrentPage(currentPage - 1);\r\n    }\r\n\r\n    const jump = (page) => {\r\n        // const pageNumber = Math.max(1, page);\r\n        setCurrentPage(page);\r\n    }\r\n\r\n    return { next, prev, jump, currentData, currentPage, maxPage, currentArray }\r\n}\r\n\r\nexport default useCustomPagination;","import React from 'react'\r\nimport Cards from './cards'\r\nimport getProducts from '../actions/getProducts'\r\nimport useCustomPagination from '../customHooks/useCustomPagination'\r\n\r\nconst CardsContainer = () => {\r\n    const [products, setProducts] = React.useState([]);\r\n    const [sortData, setSortData] = React.useState(\"recent\");\r\n\r\n    React.useEffect(() => {\r\n      getProducts().then(e => setProducts(e));\r\n    },[]);\r\n\r\n    const renderSwitch = () =>{\r\n        switch(sortData){\r\n            case \"lowPrice\":\r\n                return products.sort((a,b) => parseFloat(a.cost) - parseFloat(b.cost)).map((data, id) => <Cards key={id} {...data} />);\r\n            case \"highPrice\":\r\n                return products.sort((a,b) => parseFloat(b.cost) - parseFloat(a.cost)).map((data, id) => <Cards key={id} {...data} />);\r\n            default:\r\n                return products.sort((a,b) => (a._id < b._id ? -1 : 1)).map((data, id) => <Cards key={id} {...data} />)\r\n        }\r\n    }\r\n\r\n    const { currentArray, next, prev, maxPage, currentPage } = useCustomPagination(renderSwitch(), 16);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={() => setSortData(\"recent\")}>Most Recent</button>\r\n                <button onClick={() => setSortData(\"lowPrice\")}>Precio Bajo</button>\r\n                <button onClick={() => setSortData(\"highPrice\")}>Precio Alto</button>\r\n            </div>\r\n            <div className=\"container-cards\">\r\n            { currentArray }\r\n            </div>\r\n            <div>\r\n                <button onClick={() => prev()} disabled={ currentPage <= 1 }>Prev</button>\r\n                <button onClick={() => next()} disabled={ currentPage >= maxPage }>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardsContainer;","import Header from './components/header'\r\nimport \"./styles.css\"\r\nimport CardsContainer from './components/cardsContainer'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <CardsContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}